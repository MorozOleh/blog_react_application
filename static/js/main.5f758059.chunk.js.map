{"version":3,"sources":["redux/types/index.js","redux/reducers/postsReducer.jsx","redux/reducers/modalReducer.jsx","redux/reducers/commentsReducer.jsx","redux/reducers/rootReducer.jsx","redux/store.jsx","API/getPosts.js","API/getComments.js","API/deletePost.js","API/deleteComment.js","API/createPost.js","API/createComment.js","redux/actions/actionCreator.jsx","redux/actions/actionModal.jsx","components/Form/FormStyle.js","components/Form/Form.jsx","components/Modal/ModalStyle.js","components/Modal/Modal.jsx","components/Posts/PostsStyle.js","components/Comments/CommentsStyle.js","components/Comments/Comments.jsx","components/Post/PostStyle.js","components/Post/Post.jsx","components/Posts/Posts.jsx","App.js","index.js"],"names":["GET","GET_COMMENTS","GET_POST_COMMENTS","GET_POST","SHOW_MODAL","HIDE_MODAL","initialState","fetchedPosts","hidden","fetchedComments","blogApp","combineReducers","postsReducer","state","action","type","payload","filter","post","id","modalReducer","commentsReducer","console","log","comment","postId","store","createStore","composeWithDevTools","applyMiddleware","thunk","BASE_URL","request","a","axios","get","response","data","getPosts","getComments","deleteRequest","delete","deletePost","deleteComment","newPost","createPost","newComment","createComment","fetchPosts","dispatch","showModal","hideModal","useStyles","makeStyles","theme","root","background","padding","borderRadius","margin","spacing","width","button","display","Form","useState","title","setTitle","body","setBody","location","useLocation","isOpenComment","URLSearchParams","search","match","useParams","useDispatch","classes","onInputsChanged","event","target","name","value","className","noValidate","autoComplete","onSubmit","preventDefault","toast","success","warn","TextField","label","variant","onChange","Button","color","size","startIcon","backdrop","zIndex","drawer","Modal","open","useSelector","Backdrop","list","minWidth","wrapper","flexDirection","alignItems","fontSize","pos","marginBottom","item","listStyle","Comments","history","useHistory","comments","map","Card","CardContent","Typography","onClick","responseAllComments","deleteComments","ButtonGroup","aria-label","push","Post","handleComments","fetchPostById","handleDelete","deletePosts","gutterBottom","to","Posts","posts","useEffect","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f758059.chunk.js","sourcesContent":["export const GET = 'posts/GET';\nexport const GET_COMMENTS = 'posts/GET_COMMENTS';\nexport const GET_POST_COMMENTS = 'comment/GET_POST_COMMENTS';\nexport const GET_POST = 'post/GET_POST';\nexport const SHOW_MODAL = 'modal/SHOW_MODAL';\nexport const HIDE_MODAL = 'modal/HIDE_MODAL';\n","import { GET, GET_POST } from '../types';\n\nconst initialState = {\n  fetchedPosts: []\n}\n\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET:\n      return {\n        ...state,\n        fetchedPosts: action.payload\n      }\n    \n    case GET_POST:\n      return {\n        ...state,\n        fetchedPosts: state.fetchedPosts.filter(\n          post => post.id === action.payload\n        )\n      }\n  \n    default:\n      return state\n  }\n};\n","import { SHOW_MODAL, HIDE_MODAL } from '../types';\nconst initialState = {\n  hidden: false\n}\n\nexport const modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return {\n        hidden: true\n      }\n\n    case HIDE_MODAL:\n      return {\n        hidden: false\n      }\n\n    default:\n      return state;\n  }\n};\n","import { GET_COMMENTS, GET_POST_COMMENTS } from '../types';\n\nconst initialState = {\n  fetchedComments: []\n}\n\nexport const commentsReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case GET_COMMENTS:\n      console.log(action.payload)\n      return {\n        ...state,\n        fetchedComments: [...action.payload]\n      }\n    \n    case GET_POST_COMMENTS:\n      console.log(action.payload)\n      console.log(state)\n      return {\n        ...state,\n        fetchedComments: state.fetchedComments.filter(\n          comment => comment.postId === +action.payload\n        )\n      }\n  \n    default:\n      return state\n  }\n};\n","import { combineReducers } from 'redux';\nimport { postsReducer } from './postsReducer';\nimport { modalReducer } from './modalReducer';\nimport { commentsReducer } from './commentsReducer';\n\n\nexport const blogApp = combineReducers({\n  postsReducer,\n  modalReducer,\n  commentsReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { blogApp } from './reducers/rootReducer';\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(\n  blogApp,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n","import axios from \"axios\";\n\nexport const BASE_URL = 'https://bloggy-api.herokuapp.com/posts';\n\nconst request = async() => {\n  const response = await axios.get(BASE_URL);\n  const { data } = response;\n\n  return data;\n}\n\nexport const getPosts = () => request();\n","import axios from \"axios\";\nexport const BASE_URL = 'https://bloggy-api.herokuapp.com/comments';\n\nconst request = async() => {\n  const response = await axios.get(BASE_URL);\n  const { data } = response;\n\n  return data;\n}\n\nexport const getComments = () => request();\n","import { BASE_URL } from './getPosts'\nimport axios from 'axios';\n\nconst deleteRequest = async (id) => {\n  return axios.delete(`${BASE_URL}/${id}`);\n}\n\nexport const deletePost = id => deleteRequest(id);\n","import axios from 'axios';\nconst BASE_URL = 'https://bloggy-api.herokuapp.com/comments';\n\nconst deleteRequest = async (id) => {\n  return axios.delete(`${BASE_URL}/${id}`);\n};\n\nexport const deleteComment = id => deleteRequest(id);\n","import { BASE_URL } from './getPosts';\n\nimport axios from \"axios\";\n\nconst request = async (newPost) => {\n  return axios.post(BASE_URL, { ...newPost });\n};\n\nexport const createPost = (newPost) => request(newPost);\n","import axios from \"axios\";\nconst BASE_URL = 'https://bloggy-api.herokuapp.com/comments';\n\nconst request = async (newComment) => {\n  return axios.post(BASE_URL, { ...newComment });\n};\n\nexport const createComment = (newComment) => request(newComment);\n","\nimport {\n  GET,\n  GET_COMMENTS,\n  GET_POST,\n  GET_POST_COMMENTS\n} from '../types';\nimport { getPosts } from '../../API/getPosts';\nimport { getComments } from '../../API/getComments';\nimport { deletePost } from '../../API/deletePost';\nimport { deleteComment } from '../../API/deleteComment';\nimport { createPost } from '../../API/createPost';\nimport { createComment } from '../../API/createComment';\n\n\nexport function fetchPosts() {\n  return async dispatch => {\n    const response = await getPosts();\n\n    dispatch({\n      type: GET,\n      payload: response,\n    })\n  }\n};\n\nexport function fetchPostById(id) {\n  return async dispatch => {\n    dispatch({\n      type: GET_POST,\n      payload: id\n    });\n\n    const response = await getComments();\n\n    dispatch({\n      type: GET_COMMENTS,\n      payload: response\n    })\n\n    dispatch({\n      type: GET_POST_COMMENTS,\n      payload: id\n    })\n  }\n};\n\nexport function deletePosts(id) {\n  return async dispatch => {\n    await deletePost(id);\n    const response = await getPosts();\n  \n    dispatch({\n      type: GET,\n      payload: response,\n    })\n  }\n};\n\nexport function deleteComments({id, postId}) {\n  return async dispatch => {\n    await deleteComment(id);\n    const responseAllComments = await getComments();\n    \n    dispatch({\n      type: GET_COMMENTS,\n      payload: responseAllComments,\n    })\n        \n    dispatch({\n      type: GET_POST_COMMENTS,\n      payload: postId,\n    })\n  }\n};\n\nexport function addPost(newPost) {\n  return async dispatch => {\n    await createPost(newPost);\n    const response = await getPosts();\n  \n    dispatch({\n      type: GET,\n      payload: response,\n    })\n  }\n};\n\nexport function addComment(newComment) {\n  return async dispatch => {\n    const { postId } = newComment;\n    await createComment(newComment);\n\n     const response = await getComments();\n\n    dispatch({\n      type: GET_COMMENTS,\n      payload: response\n    })\n\n    dispatch({\n      type: GET_POST_COMMENTS,\n      payload: postId\n    })\n  }\n};\n","import {SHOW_MODAL, HIDE_MODAL} from '../types';\n\nexport function showModal() {\n  return {\n    type: SHOW_MODAL\n  }\n};\n\nexport function hideModal() {\n  return {\n    type: HIDE_MODAL\n  }\n};","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    background: 'white',\n    padding: 50,\n    borderRadius: 15,\n\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 500,\n    },\n  },\n  button: {\n    display: 'flex',\n    margin: '0 auto'\n  }\n}));\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addPost, addComment } from '../../redux/actions/actionCreator';\nimport { hideModal} from '../../redux/actions/actionModal';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useStyles } from './FormStyle';\nimport { toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport TextField from '@material-ui/core/TextField';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Button from '@material-ui/core/Button';\n\nexport function Form() {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const isOpenComment = searchParams.get('_embed');\n  const match = useParams();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onInputsChanged = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        break;\n      \n      case 'body':\n        setBody(value)\n        break;\n      \n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setBody('');\n    \n    if (isOpenComment && body) {\n      toast.success('You have successfully added your comment');\n      dispatch(addComment({ postId: +match.postId, body }));\n      dispatch(hideModal());\n\n      return;\n    };\n    \n    if (title && body) {\n      toast.success('You have successfully added your post');\n      dispatch(addPost({ title, body }));\n      dispatch(hideModal());\n      setTitle('');\n\n      return;\n    };\n\n    toast.warn('Upps you have forgotten to fill all fields')\n  };\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n      {!isOpenComment &&\n        <div>\n          <TextField\n            label=\"Type your title\"\n            id=\"filled-size-normal\"\n            value={title}\n            name=\"title\"\n            variant=\"filled\"\n            onChange={onInputsChanged}\n          />\n        </div>\n      }\n\n      <div>\n        <TextField\n          label={!isOpenComment\n            ? \"Type your description\"\n            : \"Type your comment\"\n          }\n          id=\"filled-size-normal\"\n          value={body}\n          name=\"body\"\n          variant=\"filled\"\n          onChange={onInputsChanged}\n        />\n      </div>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          startIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSelector } from 'react-redux';\nimport { Form } from '../Form/Form';\nimport { useStyles } from './ModalStyle';\n\nexport function Modal() {\n  const classes = useStyles();\n  const open = useSelector(state => state.modalReducer.hidden);\n\n  return (\n    <Backdrop\n      className={classes.backdrop}\n      open={open}\n    >\n      <Form />\n    </Backdrop>\n  );\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  button: {\n    margin: '20px auto 0',\n    display: 'block'\n  },\n\n  list: {\n    margin: 0\n  }\n})","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n  },\n\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n    \n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  item: {\n    listStyle: 'none'\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));","import React from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteComments, fetchPosts } from '../../redux/actions/actionCreator'\nimport { Modal } from '../Modal';\nimport { showModal } from '../../redux/actions/actionModal';\nimport { useStyles } from './CommentsStyle';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\nimport DeleteIcon  from '../../../node_modules/@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport function Comments() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const match = useParams()\n\n  const comments = useSelector(\n    state => state.commentsReducer.fetchedComments\n  );\n\n  const goMainPage = () => {\n    history.push('/');\n    dispatch(fetchPosts())\n  }\n\n  return (\n    <>\n      <ul>\n        {comments.map(comment => (\n          <li key={comment.id} className={classes.item}>\n            <Card className={classes.root} variant=\"outlined\">\n              <CardContent>\n\n                <Typography className={classes.pos} color=\"textSecondary\">\n                  {comment.body}\n                </Typography>\n\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.button}\n                  startIcon={<DeleteIcon />}\n                  onClick={() => dispatch(deleteComments({\n                    id: comment.id,\n                    postId: +match.postId\n                  }))}\n                >\n                  Delete\n                </Button>\n              </CardContent>\n            </Card>\n          </li>\n        ))}\n      </ul>\n      <div className={classes.wrapper}>\n        <ButtonGroup\n          size=\"large\"\n          color=\"primary\"\n          aria-label=\"large outlined primary button group\"\n        >\n          <Button\n            onClick={() => dispatch(showModal())}\n          >\n            Add new comment\n          </Button>\n          <Button\n            onClick={goMainPage}\n          >\n            Main page\n          </Button>\n        </ButtonGroup>\n      </div>\n      <Modal />\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n  },\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  item: {\n    listStyle: 'none'\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deletePosts, fetchPostById } from '../../redux/actions/actionCreator';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { Comments } from '../Comments';\nimport { useStyles } from './PostStyle';\n\nimport Card from '@material-ui/core/Card';\nimport DeleteIcon  from '../../../node_modules/@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default function Post({\n  title,\n  body,\n  id\n}) {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const isOpenComment = searchParams.get('_embed');\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const history = useHistory()\n\n  const handleComments = (id) => {\n    dispatch(fetchPostById(id))\n  }\n\n  const handleDelete = (id) => {\n    dispatch(deletePosts(id));\n    history.push('/');\n  }\n\n  return (\n    <>\n      <li className={classes.item}>\n        <Card className={classes.root} variant=\"outlined\">\n          <CardContent>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n              {title}\n            </Typography>\n\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {body}\n            </Typography>\n\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              startIcon={<DeleteIcon />}\n              onClick={() => handleDelete(id)}\n            >\n              Delete\n            </Button>\n            <Link\n              to={`/${id}?_embed=comments`}\n              onClick={() => handleComments(id)}\n            >\n              Comments\n              </Link>\n          </CardContent>\n        </Card>\n      </li>\n      {isOpenComment && < Comments />}\n    </>\n  )\n};\n","import React, { useEffect } from 'react';\nimport {\n  useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom'\nimport { fetchPosts } from '../../redux/actions/actionCreator';\nimport { showModal } from '../../redux/actions/actionModal';\nimport { Modal } from '../Modal';\nimport { useStyles } from './PostsStyle';\n\nimport Button from '@material-ui/core/Button';\nimport Post from '../Post';\n\nfunction Posts() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.postsReducer.fetchedPosts);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const isOpenComment = searchParams.get('_embed');\n  \n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ul className={classes.list}>\n        {posts.map(post => (\n          <Post\n            key={post.id}\n            title={post.title}\n            body={post.body}\n            id={post.id}\n          />\n        )\n        )}\n      </ul>\n      {!isOpenComment &&\n        <Button\n          variant=\"contained\"\n          className={classes.button}\n          color=\"secondary\"\n          onClick={() => dispatch(showModal())}\n        >\n          Add new post\n        </Button>\n      }\n      <Modal />\n    </>\n  )\n};\n\nexport default Posts;\n","import React from 'react';\nimport Posts from './components/Posts';\nimport { Redirect, Route } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify';\n\nfunction App() {\n  return (\n    <>\n      <ToastContainer />\n      <Route\n        exact\n        path='/:postId?'\n        component={Posts}\n      />\n      <Redirect exact to='/' />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nimport './App.scss';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}