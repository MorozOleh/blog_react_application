{"version":3,"sources":["redux/types/index.js","redux/reducers/postsReducer.jsx","redux/reducers/modalReducer.jsx","redux/reducers/commentsReducer.jsx","redux/reducers/rootReducer.jsx","redux/store.jsx","API/getPosts.js","API/deletePost.js","API/deleteComment.js","API/createPost.js","API/createComment.js","API/getComments.js","redux/actions/actionCreator.jsx","components/Form/Form.jsx","components/Modal/Modal.jsx","components/Comments/Comments.jsx","components/Post/Post.jsx","components/Posts/Posts.jsx","App.js","index.js"],"names":["GET","GET_COMMENTS","GET_POST_COMMENTS","GET_POST","SHOW_MODAL","HIDE_MODAL","initialState","fetchedPosts","hidden","fetchedComments","blogApp","combineReducers","postsReducer","state","action","type","payload","filter","post","id","modalReducer","commentsReducer","comment","postId","store","createStore","composeWithDevTools","applyMiddleware","thunk","BASE_URL","request","a","axios","get","response","data","fetchPost","deleteRequest","delete","deletePost","deleteComment","newPost","createPost","newComment","createComment","fetchComments","showModal","useStyles","makeStyles","theme","root","background","padding","borderRadius","margin","spacing","width","button","display","Form","location","useLocation","isOpenComment","URLSearchParams","search","match","useParams","dispatch","useDispatch","useState","title","setTitle","body","setBody","classes","handleInput","event","target","name","value","className","noValidate","autoComplete","onSubmit","preventDefault","getComments","TextField","label","variant","onChange","Button","color","size","startIcon","backdrop","zIndex","drawer","Modal","open","useSelector","Backdrop","minWidth","fontSize","pos","marginBottom","item","listStyle","Comments","useEffect","comments","map","Card","CardContent","Typography","onClick","responseAllComments","deleteComments","Post","gutterBottom","deletePosts","to","getPost","list","Posts","posts","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ae2fb1f.chunk.js","sourcesContent":["export const GET = 'posts/GET';\nexport const GET_COMMENTS = 'posts/GET_COMMENTS';\nexport const GET_POST_COMMENTS = 'comment/GET_POST_COMMENTS';\nexport const GET_POST = 'post/GET_POST';\nexport const SHOW_MODAL = 'modal/SHOW_MODAL';\nexport const HIDE_MODAL = 'modal/HIDE_MODAL';\n","import { GET, GET_POST } from '../types';\n\nconst initialState = {\n  fetchedPosts: []\n}\n\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET:\n      return {\n        ...state,\n        fetchedPosts: action.payload\n      }\n    \n    case GET_POST:\n      return {\n        ...state,\n        fetchedPosts: state.fetchedPosts.filter(\n          post => post.id === action.payload\n        )\n      }\n  \n    default:\n      return state\n  }\n};\n","import { SHOW_MODAL, HIDE_MODAL } from '../types';\nconst initialState = {\n  hidden: false\n}\n\nexport const modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return {\n        hidden: true\n      }\n\n    case HIDE_MODAL:\n      return {\n        hidden: false\n      }\n\n    default:\n      return state;\n  }\n};\n","import { GET_COMMENTS, GET_POST_COMMENTS } from '../types';\n\nconst initialState = {\n  fetchedComments: []\n}\n\nexport const commentsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_COMMENTS:\n      return {\n        ...state,\n        fetchedComments: action.payload\n      }\n    \n    case GET_POST_COMMENTS:\n      return {\n        ...state,\n        fetchedComments: state.fetchedComments.filter(\n          comment => comment.postId === action.payload\n        )\n      }\n  \n    default:\n      return state\n  }\n};\n","import { combineReducers } from 'redux';\nimport { postsReducer } from './postsReducer';\nimport { modalReducer } from './modalReducer';\nimport { commentsReducer } from './commentsReducer';\n\n\nexport const blogApp = combineReducers({\n  postsReducer,\n  modalReducer,\n  commentsReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { blogApp } from './reducers/rootReducer';\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(\n  blogApp,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n","import axios from \"axios\";\n\nexport const BASE_URL = 'https://bloggy-api.herokuapp.com/posts';\n\nconst request = async() => {\n  const response = await axios.get(BASE_URL);\n  const { data } = response;\n\n  return data;\n}\n\nexport const fetchPost = () => request();\n","import { BASE_URL } from './getPosts'\nimport axios from 'axios';\n\nconst deleteRequest = async (id) => {\n  return axios.delete(`${BASE_URL}/${id}`);\n}\n\nexport const deletePost = id => deleteRequest(id);\n","import axios from 'axios';\nconst BASE_URL = 'https://bloggy-api.herokuapp.com/comments';\n\nconst deleteRequest = async (id) => {\n  return axios.delete(`${BASE_URL}/${id}`);\n}\n\nexport const deleteComment = id => deleteRequest(id);","import { BASE_URL } from './getPosts';\n\nimport axios from \"axios\";\n\nconst request = async(newPost) => {\n  return axios.post(BASE_URL, { ...newPost });\n}\n\nexport const createPost = (newPost) => request(newPost);\n","import axios from \"axios\";\nconst BASE_URL = 'https://bloggy-api.herokuapp.com/comments';\n\n\nconst request = async(newComment) => {\n  return axios.post(BASE_URL, { ...newComment });\n}\n\nexport const createComment = (newComment) => request(newComment);","import axios from \"axios\";\nexport const BASE_URL = 'https://bloggy-api.herokuapp.com/comments';\n\nconst request = async() => {\n  const response = await axios.get(BASE_URL);\n  const { data } = response;\n\n  return data;\n}\n\nexport const fetchComments = () => request();","\nimport {\n  GET,\n  GET_COMMENTS,\n  GET_POST,\n  SHOW_MODAL,\n  HIDE_MODAL,\n  GET_POST_COMMENTS\n} from '../types';\nimport { fetchPost } from '../../API/getPosts';\nimport { deletePost } from '../../API/deletePost';\nimport { deleteComment } from '../../API/deleteComment';\nimport { createPost } from '../../API/createPost';\nimport { createComment } from '../../API/createComment';\nimport { fetchComments as getComments } from '../../API/getComments';\n\n\nexport function fetchPosts() {\n  return async dispatch => {\n    const response = await fetchPost();\n\n    dispatch({\n      type: GET,\n      payload: response,\n    })\n  }\n};\n\nexport function getPost(id) {\n  return {\n    type: GET_POST,\n    payload: id\n  }\n}\n\nexport function fetchComments() {\n  return async dispatch => {\n    const response = await getComments();\n\n    dispatch({\n      type: GET_COMMENTS,\n      payload: response,\n    })\n  }\n};\n\nexport function getPostComments(id) {\n  return {\n    type: GET_POST_COMMENTS,\n    payload: id\n  }\n}\n\nexport function deletePosts(id) {\n  return async dispatch => {\n    await deletePost(id);\n    const response = await fetchPost();\n  \n    dispatch({\n      type: GET,\n      payload: response,\n    })\n  }\n};\n\nexport function deleteComments({id, postId}) {\n  return async dispatch => {\n    await deleteComment(id);\n    const responseAllComments = await getComments();\n    \n    dispatch({\n      type: GET_COMMENTS,\n      payload: responseAllComments,\n    })\n        \n    dispatch({\n      type: GET_POST_COMMENTS,\n      payload: postId,\n    })\n  }\n};\n\nexport function addPost(newPost) {\n  return async dispatch => {\n    await createPost(newPost);\n    const response = await fetchPost();\n  \n    dispatch({\n      type: GET,\n      payload: response,\n    })\n  }\n};\n\nexport function addComment(newComment) {\n  return async dispatch => {\n    await createComment(newComment);\n    const response = await getComments();\n  \n    dispatch({\n      type: GET,\n      payload: response,\n    })\n  }\n};\n\nexport function showModal() {\n  return {\n    type: SHOW_MODAL\n  }\n};\n\nexport function hideModal() {\n  return {\n    type: HIDE_MODAL\n  }\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { hideModal, addPost, addComment } from '../../redux/actions/actionCreator';\nimport { useLocation, useParams } from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: 'white',\n    padding: 50,\n    borderRadius: 15,\n\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 500,\n    },\n  },\n  button: {\n    display: 'flex',\n    margin: '0 auto'\n  }\n}));\n\nexport function Form() {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const isOpenComment = searchParams.get('_embed');\n  const match = useParams()\n  const dispatch = useDispatch()\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('')\n  const classes = useStyles();\n\n  const handleInput = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        break;\n      \n      case 'body':\n        setBody(value)\n        break;\n      \n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(hideModal())\n    setBody('');\n    \n    if (isOpenComment) {\n      dispatch(addComment({\n        postId: +match.postId,\n        body,\n      }))\n      \n      return;\n    }\n\n    dispatch(addPost({ title, body }))\n    setTitle('')\n  };\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n      {!isOpenComment && <>\n        <div>\n        <TextField\n          label=\"Type your title\"\n          id=\"filled-size-normal\"\n          value={title}\n          name=\"title\"\n          variant=\"filled\"\n          onChange={handleInput}\n        />\n      </div>\n      <div>\n        <TextField\n          label=\"Type here\"\n          id=\"filled-size-normal\"\n          value={body}\n          name=\"body\"\n          variant=\"filled\"\n          onChange={handleInput}\n        />\n        </div>\n      </> }\n      { isOpenComment && <div>\n        <TextField\n          label=\"Type comment\"\n          id=\"filled-size-normal\"\n          value={body}\n          name=\"body\"\n          variant=\"filled\"\n          onChange={handleInput}\n        />\n        </div>\n      }\n      <div>\n        <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        type=\"submit\"\n        startIcon={<SaveIcon />}\n      >\n        Save\n      </Button>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { Form } from '../Form/Form';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport function Modal() {\n  const classes = useStyles();\n  const open = useSelector(state => state.modalReducer.hidden);\n\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={open} >\n        <Form />\n      </Backdrop>\n    </div>\n  );\n  ;}\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPostComments, deleteComments } from '../../redux/actions/actionCreator'\nimport { Modal } from '../Modal';\nimport { showModal } from '../../redux/actions/actionCreator';\nimport Card from '@material-ui/core/Card';\nimport DeleteIcon  from '../../../node_modules/@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n  },\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  item: {\n    listStyle: 'none'\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\n\nexport function Comments() {\n  const classes = useStyles();\n\n  const match = useParams()\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(getPostComments(+match.postId)), [])\n\n  const comments = useSelector(\n    state => state.commentsReducer.fetchedComments\n  );\n\n  return (\n    <>\n      <ul>\n        {comments.map(comment => (\n          <li key={comment.id} className={classes.item}>\n        <Card className={classes.root} variant=\"outlined\">\n          <CardContent>\n\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {comment.body}\n            </Typography>\n\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              startIcon={<DeleteIcon />}\n                  onClick={() => dispatch(deleteComments({\n                    id: comment.id,\n                    postId: + match.postId\n                  }))}\n            >\n              Delete\n            </Button>\n          </CardContent>\n        </Card>\n      </li>\n        ))}\n      </ul>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => dispatch(showModal())}\n      >\n        Add new post\n      </Button>\n      <Modal />\n    </>\n  )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { deletePosts, getPost } from '../../redux/actions/actionCreator';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Comments } from '../Comments';\n\nimport Card from '@material-ui/core/Card';\nimport DeleteIcon  from '../../../node_modules/@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n  },\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  item: {\n    listStyle: 'none'\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function Post({\n  title,\n  body,\n  id\n}) {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const isOpenComment = searchParams.get('_embed');\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return (\n    <>\n      <li className={classes.item}>\n        <Card className={classes.root} variant=\"outlined\">\n          <CardContent>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n              {title}\n            </Typography>\n\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {body}\n            </Typography>\n\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              startIcon={<DeleteIcon />}\n              onClick={() => dispatch(deletePosts(id))}\n            >\n              Delete\n            </Button>\n            <Link\n              to={`/${id}?_embed=comments`}\n              onClick={() => {dispatch(getPost(id))}}\n            >\n              Comments\n              </Link>\n          </CardContent>\n        </Card>\n      </li>\n      {isOpenComment && < Comments />}\n    </>\n  )\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchComments, fetchPosts } from '../../redux/actions/actionCreator';\nimport { showModal } from '../../redux/actions/actionCreator';\n\nimport { Modal } from '../Modal';\nimport Button from '@material-ui/core/Button';\nimport Post from '../Post';\n\nconst useStyles = makeStyles({\n  button: {\n    margin: '0 auto',\n    display: 'block'\n  },\n\n  list: {\n    margin: 0\n  }\n})\n\nfunction Posts() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const posts = useSelector(state => state.postsReducer.fetchedPosts);\n  \n  useEffect(() => {\n    dispatch(fetchPosts());\n  dispatch(fetchComments());\n  }, []);\n\n  return (\n    <>\n      <ul className={classes.list}>\n        {posts.map(post => (\n          <Post\n            key={post.id}\n            title={post.title}\n            body={post.body}\n            id={post.id}\n          />\n        )\n        )}\n      </ul>\n      <Button\n        variant=\"contained\"\n        className={classes.button}\n        color=\"secondary\"\n        onClick={() => dispatch(showModal())}\n      >\n        Add new post\n      </Button>\n      <Modal />\n    </>\n  )\n};\n\nexport default Posts;\n","import React from 'react';\nimport Posts from './components/Posts';\nimport { Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Route\n      exact\n      path='/:postId?'\n      component={Posts}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nimport './App.scss';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}