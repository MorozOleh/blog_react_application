{"version":3,"sources":["redux/types/index.js","redux/reducers/postsReducer.jsx","redux/reducers/rootReducer.jsx","redux/store.jsx","API/getPosts.js","API/deletePost.js","components/Post/Post.jsx","redux/actions/actionCreator.jsx","components/Posts/Posts.jsx","App.js","index.js"],"names":["GET","initialState","fetchedPosts","blogApp","combineReducers","postReducer","state","action","type","payload","store","createStore","composeWithDevTools","applyMiddleware","thunk","BASE_URL","request","a","axios","get","response","data","fetchPost","deleteRequest","id","delete","deletePost","useStyles","makeStyles","theme","root","minWidth","title","fontSize","pos","marginBottom","item","listStyle","button","margin","spacing","Post","body","dispatch","useDispatch","classes","className","Card","variant","CardContent","Typography","color","gutterBottom","Button","startIcon","onClick","deletePosts","Posts","posts","useSelector","console","log","useEffect","map","post","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"+OAAaA,EAAM,YCCbC,EAAe,CACnBC,aAAc,ICCHC,EAAUC,0BAAgB,CACrCC,YDAyB,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAC3D,OAAQA,EAAOC,MACb,KAAKR,EACH,OAAO,2BACFM,GADL,IAEEJ,aAAcK,EAAOE,UAGzB,QACE,OAAOH,MERAI,EAAQC,sBACnBR,EACAS,8BACEC,0BAAgBC,O,gHCNPC,EAAW,yCAGlBC,EAAO,uCAAG,8BAAAC,EAAA,sEACSC,IAAMC,IAAIJ,GADnB,cACRK,EADQ,OAGNC,EAASD,EAATC,KAHM,kBAIPA,GAJO,2CAAH,qDAOAC,EAAY,kBAAMN,KCTzBO,EAAa,uCAAG,WAAOC,GAAP,iBAAAP,EAAA,sEACGC,IAAMO,OAAN,UAAgBV,EAAhB,YAA4BS,IAD/B,cACdJ,EADc,OAGZC,EAASD,EAATC,KAHY,kBAKbA,GALa,2CAAH,sDAQNK,EAAa,SAAAF,GAAE,OAAID,EAAcC,I,WCAxCG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,KAGZC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,IAEhBC,KAAM,CACJC,UAAW,QAEbC,OAAQ,CACNC,OAAQV,EAAMW,QAAQ,QAIX,SAASC,EAAT,GAEX,IADFT,EACC,EADDA,MAAOU,EACN,EADMA,KAAMlB,EACZ,EADYA,GAEPmB,EAAWC,cAEXC,EAAUlB,IAChB,OACE,oBAAImB,UAAWD,EAAQT,KAAvB,SACE,cAACW,EAAA,EAAD,CAAMD,UAAWD,EAAQf,KAAMkB,QAAQ,WAAvC,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYJ,UAAWD,EAAQb,MAAOmB,MAAM,gBAAgBC,cAAY,EAAxE,SACGpB,IAGH,cAACkB,EAAA,EAAD,CAAYJ,UAAWD,EAAQX,IAAKiB,MAAM,gBAA1C,SACGT,IAGH,cAACW,EAAA,EAAD,CACEL,QAAQ,YACRG,MAAM,YACNL,UAAWD,EAAQP,OACnBgB,UAAW,cAAC,IAAD,IACXC,QAAS,kBAAMZ,ECrCpB,SAAqBnB,GAC1B,8CAAO,WAAMmB,GAAN,eAAA1B,EAAA,sEACCS,EAAWF,GADZ,uBAEkBF,IAFlB,OAECF,EAFD,OAILuB,EAAS,CACPnC,KAAMR,EACNS,QAASW,IANN,2CAAP,sDDoCkCoC,CAAYhC,KALtC,2BEnBKiC,MAvBf,WACE,IAAMd,EAAWC,cACXc,EAAQC,aAAY,SAAArD,GAAK,OAAIA,EAAMD,YAAYH,gBAKrD,OAJA0D,QAAQC,IAAIH,GAEZI,qBAAU,kBAAMnB,EDLhB,uCAAO,WAAMA,GAAN,eAAA1B,EAAA,sEACkBK,IADlB,OACCF,EADD,OAGLuB,EAAS,CACPnC,KAAMR,EACNS,QAASW,IALN,2CAAP,yDCKwC,IAGtC,6BACGsC,EAAMK,KAAI,SAAAC,GAAI,OACb,cAACvB,EAAD,CAEET,MAAOgC,EAAKhC,MACZU,KAAMsB,EAAKtB,KACXlB,GAAIwC,EAAKxC,IAHJwC,EAAKxC,U,OCHLyC,MAVf,WACE,OACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAK,YACLC,UAAWX,KCEjBY,IAASC,OACP,cAAC,IAAD,CAAU5D,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJ6D,SAASC,eAAe,W","file":"static/js/main.eb70611c.chunk.js","sourcesContent":["export const GET = 'posts/GET';\nexport const DELETE = 'post/DELETE';","import { GET, DELETE } from '../types';\nconst initialState = {\n  fetchedPosts: []\n}\nexport const postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET:\n      return {\n        ...state,\n        fetchedPosts: action.payload\n      }\n  \n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux';\nimport { postReducer } from './postsReducer';\n\nexport const blogApp = combineReducers({\n  postReducer,\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\nimport { blogApp } from './reducers/rootReducer';\n\nexport const store = createStore(\n  blogApp,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);","import axios from \"axios\";\n\nexport const BASE_URL = 'https://bloggy-api.herokuapp.com/posts';\n\n\nconst request = async() => {\n  const response = await axios.get(BASE_URL);\n\n  const { data } = response;\n  return data;\n}\n\nexport const fetchPost = () => request();\n\n\n","import { BASE_URL } from './getPosts'\nimport axios from 'axios';\n\nconst deleteRequest = async (id) => {\n  const response = await axios.delete(`${BASE_URL}/${id}`);\n\n  const { data } = response;\n\n  return data;\n}\n\nexport const deletePost = id => deleteRequest(id);","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport DeleteIcon  from '../../../node_modules/@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { useDispatch } from 'react-redux';\nimport { deletePosts } from '../../redux/actions/actionCreator'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n  },\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  item: {\n    listStyle: 'none'\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function Post({\n  title, body, id\n}) {\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n  return (\n    <li className={classes.item}>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            {title}\n          </Typography>\n\n          <Typography className={classes.pos} color=\"textSecondary\">\n            {body}\n          </Typography>\n\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            startIcon={<DeleteIcon />}\n            onClick={() => dispatch(deletePosts(id))}\n          >\n            Delete\n          </Button>\n        </CardContent>\n      </Card>\n    </li>\n  )\n}\n","import { GET } from '../types';\nimport { fetchPost } from '../../API/getPosts';\nimport { deletePost } from '../../API/deletePost';\n\n\nexport function fetchPosts() {\n  return async dispatch => {\n    const response = await fetchPost();\n\n    dispatch({\n      type: GET,\n      payload: response,\n    })\n  }\n};\n\nexport function deletePosts(id) {\n  return async dispatch => {\n    await deletePost(id);\n    const response = await fetchPost();\n  \n    dispatch({\n      type: GET,\n      payload: response,\n    })\n  }\n};","import React, { useEffect } from 'react';\nimport Post from '../Post';\nimport {useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts } from '../../redux/actions/actionCreator';\n\n\nfunction Posts() {\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.postReducer.fetchedPosts);\n  console.log(posts)\n\n  useEffect(() => dispatch(fetchPosts()), []);\n\n  return (\n    <ul>\n      {posts.map(post => (\n        <Post\n          key={post.id}\n          title={post.title}\n          body={post.body}\n          id={post.id}\n        />\n      )\n      )}\n    </ul>\n  )\n}\n\n\nexport default Posts;\n\n\n\n\n    \n","import React from 'react';\nimport Posts from './components/Posts';\nimport { Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Route\n      exact\n      path='/:postId?'\n      component={Posts}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nimport './App.scss';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}